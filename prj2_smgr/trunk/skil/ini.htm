<html>
<body>
<h3>Настройки регистратора</h3>
<p> Все доступные настройки содержаться в <b><i>ini</i>-файле</b>, рядом с исполняемым. Редактируется блокнотом. 
Изменения, сделанные в работающей программе, не сохраняются. При изменении содержимого ini-файла программа перезапускается!
<br>
<h4>Образец</h4>
<pre>
[stat_f_s3.vi]
kD = 3	; множитель СКО для определения порогов стат. фильтра, диапазон 1...3

[skil3.vi]
save = false ; сохранять на диске
send = false ; отправлять серверу
schedule = true ; исполнять расписание
KR_data = "ssh.alwaysdata.com:12673"
SMGR_link = "http://smgr.alwaysdata.net/post_event/"
ch0 = sync:0:0 ; название сигнала и номера каналов АЦП для ГП (первая цифра) и для КР (вторая цифра)
ch1 = phase_a:4:2
ch2 = phase_b:1:3
ch3 = phase_c:6:5
DevNo = 5 ; номер измерителя в базе данных
Ver = ""
StartPath = ""
restart = true ; перезапускать программу по ошибке в корзине PXI
sch_per = 30 ; периодичность в расписании

[filters.vi]
filter = "FIR" ; настройки фильтра ВЧ связи по умолчанию
stop_freq = 200e3 ; частота подавления
high_freq = 500e3 ; частота пропускания, выше частоты подавления
order = 2 ; порядок фильтра с БИХ
taps = 500 ; порядок фильтров с КИХ

phase_a="FIR:500:2:200e3:800e3" ; последовательность - filter:taps:order:stop_freq:high_freq
phase_b="FIR:500:2:200e3:600e3"
phase_c="FIR:500:2:200e3:700e3"

</pre>
<p>
Настройки фильтра ВЧ связи в окне фильтров установятся по ini-файлу только при первом использовании фильтра! Настройки фильтра по умолчанию устанавливаются для всех каналов, если
настройки для каналов не оговорены отдельно. Предположительно в одном измерителе может быть только одна группа "коронных разрядов", поэтому настройки фильтров привязаны по имени канала.
</p>
<h3>Настройки readrems</h3>
Настройки хранятся в файле <strong>glu.ini</strong>.
<pre>
[readrems.vi]
DevNo = 10
srcurl = &quot;http://andray/proj/t1.txt&quot;
CMDPath = &quot;e:/work/andrew/andrew_stend/inter&quot;
ReplyTo = &quot;file:///e:/work/andrew/andrew_stend/inter/1.txt&quot;
quit = FALSE
RunTwice = true</pre>
<p>DevNo - Номер измерителя</p>
<p>SrcURL - URL странички с командами для измерителей</p>
<p>CMDPath - Путь на локальном компьютере к папке с исполняемыми вишками</p>
<p>ReplyTo - URL для отправки сообщений по результатам выполнения</p>
<p>Quit - Флажок, закрывать окно программы после выполнения команды</p>
<p>RunTwice - Флажок, выполнять команду даже если не новая</p>
<h3>XML</h3>
По пути наименьшего сопротивления использована готовая схема,
поэтому часть xml описывает структуру данных Labview.
<ul>В программе для 
записи команды использован кластер из трёх компонент: 
<li><strong>DevNo</strong> - номер измерителя;</li>
<li><strong>Cmd</strong> - команда и она же название вишки;</li>
<li><strong>Param</strong> - строка, передаваемая вишке.</li></ul>
Дополнительно в фай записывается дата как строка (%Y-%m-%d %H:%M:%S).
Итого в xml-файле два узла: Cluster-для записи команды и String-для записи даты.
<p>Описание самого кластера содержит его имя и число компонент, каждая компонента
содержит указание типа, названия параметра и его значение.
<a href="t1.xml" target="_blank">Пример</a></p>
<p>В представленном примере зашифровано сообщение для измерителя DevNo=10 выполнить
команду Cmd=settings с параметром Param=show. Это заклинание должно привести к выполнению на 10 измерителе вишки settings.vi c входным параметром show.</p>
<h3>TXT</h3>
Рассмотренное заклинание в txt формате будет выглядеть так:
<pre>
10:settings:show
2013-04-21 06:11:19
</pre>
Оба формата допускают запись и выполнение нескольких команд (типа пакетного режима).
</body></html>